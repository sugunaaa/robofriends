{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","src","concat","id","alt","name","email","CardList","_ref","robots","cardComponent","map","user","i","components_Card","key","Searchbox","searchfield","SearchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_Searchbox","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_containers_App"],"mappings":"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","file":"static/js/main.de0bb97d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${props.id}?200x200`} alt='robos' />\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList=({robots})=>{\r\n    // if(true){\r\n    //     throw new Error('NOOO');\r\n    // }\r\n    const cardComponent=robots.map((user,i)=>{\r\n        return<Card key={i}\r\n         id={robots[i].id} \r\n         name={robots[i].name}\r\n          email={robots[i].email} />\r\n    })\r\n    return(\r\n        <div>\r\n        {cardComponent}\r\n        </div>  \r\n    );\r\n}\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst Searchbox=({searchfield, SearchChange})=>{\r\n    return(\r\n        <div className=\"pa2\">\r\n           < input type='search'\r\n            className='pa3 ba b--green bg-lightest-blue' \r\n            placeholder=\"search robots\" \r\n            onChange={SearchChange}/> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Searchbox;","import React from \"react\";\r\n\r\nconst Scroll=(props)=>{\r\n    return (\r\n        <div style={{overflowY:\"scroll\", border: '5px solid black', height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default Scroll;","import React,{Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super();\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    render(){\r\n        if(this.state.hasError===true)\r\n            return <h1>Oooops that is not good :/</h1>\r\n        else\r\n            return this.props.children;\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\n}\r\nexport default ErrorBoundary;","import React,{Component} from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport Searchbox from \"../components/Searchbox.js\";\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\nimport './App.css'\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=> {this.setState({robots:users})});\r\n    }\r\n       \r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield:event.target.value })         \r\n    }\r\n    render(){\r\n            const{robots,searchfield}=this.state;\r\n            const filteredRobots=robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());   \r\n             })\r\n             return !robots.length?\r\n             <h1>Loading...</h1>: \r\n            (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">RoboFriends</h1>\r\n                <Searchbox SearchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                         <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        ); \r\n        }\r\n    }   \r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n<App />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}